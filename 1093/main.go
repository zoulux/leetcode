package main

import "fmt"

func main() {

	//fmt.Println(sampleStats([]int{
	//	0, 1, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	//}))
	//

	//86.0,203.0,126.44444,86.0,86.0
	fmt.Println(sampleStats([]int{
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	}))
}

func sampleStats(count []int) []float64 {
	minimum := -1  // 最小
	maximum := -1  //最大
	sum := 0       //求和，为了平均数
	cnt := 0       // 元素总个数，为了平均数
	mode := -1     // 众数
	modeCount := 0 // 众数对应的个数
	for i, v := range count {
		if v != 0 {
			if minimum == -1 {
				minimum = i // 第一次赋值的时候就是最小值
			}

			if i > maximum {
				maximum = i //最后一次就是最大值
			}

			cnt += v     // 个数相加
			sum += i * v //和相加

			if v > modeCount {
				// 计算众数
				modeCount = v
				mode = i
			}
		}
	}

	median := 0.0 //平均数
	if cnt%2 == 0 {
		// 偶数
		// 取 half 和 half+1
		// 1 1 [2 3] 3 4
		half := cnt / 2

		l := -1.0 // 偶数的左边
		r := -1.0 //偶数的右边
		j := 0
		for i, v := range count {
			if v != 0 {
				j += v

				if l == -1 && j >= half {
					l = float64(i)
				}
				if j >= half+1 {
					r = float64(i)
					break
					// 核心点在于，我提前退出循环了
				}
			}
		}

		median = float64(l+r) / 2.0

	} else {
		// 奇数情况
		// 1 1 [2] 3 3
		half := cnt/2 + 1

		j := 0
		for i, v := range count {
			if v != 0 {
				j += v
				if j >= half {
					median = float64(i)
					break
					// 核心点在于，我提前退出循环了
				}
			}
		}
	}

	mean := float64(sum) / float64(cnt)

	return []float64{
		float64(minimum),
		float64(maximum),
		mean,
		median,
		float64(mode),
	}
}
